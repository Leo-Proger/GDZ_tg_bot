from aiogram import Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, ReplyKeyboardRemove

from app import config
from app.keyboards.keyboards import book_selection_kb
from . import selection_exercise
from . import selection_number
from . import selection_page
from . import selection_paragraph

router = Router()
router.include_routers(
    selection_page.router,
    selection_exercise.router,
    selection_number.router,
    selection_paragraph.router,
)


class FormBook(StatesGroup):
    book = State()  # –û—Ç–¥–µ–ª—å–Ω—ã–π —É—á–µ–±–Ω–∏–∫ –∫–∞–∫–æ–≥–æ-—Ç–æ –∞–≤—Ç–æ—Ä–∞


@router.message(Command('list'))
async def book_selection(message: Message, state: FSMContext) -> None:
    await state.set_state(FormBook.book)

    await message.answer('–í—ã–±–µ—Ä–∏ —É—á–µ–±–Ω–∏–∫ üìêüììüìäüìò', reply_markup=book_selection_kb())


@router.message(FormBook.book)
async def page_or_exercise_selection(message: Message, state: FSMContext) -> None:
    if message.text == config.BOOKS.get('—Ä—É—Å—Å–∫–∏–π'):
        await state.update_data(book=message.text)
        await state.set_state(selection_exercise.FormExercise.exercise)

        await message.answer('–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ üìÉ _(–æ—Ç 1 –¥–æ 396 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ)_',
                             reply_markup=ReplyKeyboardRemove())

    elif message.text == config.BOOKS.get('–∞–Ω–≥–ª–∏–π—Å–∫–∏–π'):
        await state.update_data(book=message.text)
        await state.set_state(selection_page.FormPage.page)

        await message.answer('–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É üìñ _(–æ—Ç 10 –¥–æ 180 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ)_',
                             reply_markup=ReplyKeyboardRemove())

    elif message.text == config.BOOKS.get('–∞–ª–≥–µ–±—Ä–∞-–∑–∞–¥–∞—á–Ω–∏–∫'):
        await state.update_data(book=message.text)
        await state.set_state(selection_number.FormNumber.number)

        await message.answer('–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è üìñ _(–æ—Ç 1.1 –¥–æ 60.19 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ)_',
                             reply_markup=ReplyKeyboardRemove())

    elif message.text == config.BOOKS.get('–≥–µ–æ–º–µ—Ç—Ä–∏—è'):
        await state.update_data(book=message.text)
        await state.set_state(selection_number.FormNumber.number)

        await message.answer('–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è üìñ _(–æ—Ç 1 –¥–æ 870 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ)_',
                             reply_markup=ReplyKeyboardRemove())
    elif message.text == config.BOOKS.get('–æ–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ'):
        await state.update_data(book=message.text)
        await state.set_state(selection_paragraph.FormParagraph.paragraph)

        await message.answer('–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –ø–∞—Ä–∞–≥—Ä–∞—Ñ —É—á–µ–±–Ω–∏–∫–∞ üìñ _(–æ—Ç 1 –¥–æ 44 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ)_\n\n'
                             '–ï—Å–ª–∏ —É –≤–∞—Å –ø–∞—Ä–∞–≥—Ä–∞—Ñ –≤–∏–¥–∞ _"—á–∏—Å–ª–æ-—á–∏—Å–ª–æ"_, —Ç–æ –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –ø–µ—Ä–µ–¥ –¥–µ—Ñ–∏—Å–æ–º',
                             reply_markup=ReplyKeyboardRemove())
    else:
        await message.reply('–¢–∞–∫–æ–≥–æ —É—á–µ–±–Ω–∏–∫–∞, —É –º–µ–Ω—è –Ω–µ—Ç üòï', reply_markup=ReplyKeyboardRemove())
        await state.clear()
